---
# file: roles/workstations/tasks/packages.yml
- name: install school repository
  copy: src=school.repo dest=/etc/yum.repos.d
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version|int < 25 or ansible_distribution_major_version|int >= 27
  tags:
   - install
   - packages
   - repo

- name: install extra repositories
  copy: src={{item}}.repo dest=/etc/yum.repos.d
  with_items:
   - school
   - n17-multimedia
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and ansible_distribution_major_version|int < 27
  tags:
   - install
   - packages
   - repo

- name: install python-dnf
  dnf: name="python-dnf"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22
  tags:
   - install
   - packages
   - repo
   - languages
   - fonts

- name: install libvirt
  dnf: name="libvirt"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22
  tags:
   - install
   - packages
   - repo
   - languages
   - fonts

- name: install thonny
  dnf: name="thonny"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22
  tags:
   - install
   - packages
   - repo
   - languages
   - fonts

- name: set package manager to yum
  set_fact: yum="yum"
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version|int < 22
  tags:
   - install
   - atomic
   - packages
   - repo
   - languages
   - fonts

- name: set package manager to dnf
  set_fact: yum="dnf"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22
  tags:
   - install
   - atomic
   - packages
   - repo
   - languages
   - fonts

- name: set strict mode to False
  ini_file: dest=/etc/dnf/dnf.conf section=main option=strict value=False
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 23
  tags:
   - install
   - packages
   - repo
   - languages
   - fonts

- name: clear cache cookies
  command: find "/var/cache/{{ yum }}" -iname cachecookie -delete
  changed_when: False
  tags:
   - install
   - atomic
   - packages
   - repo

- name: install GNOME Desktop for < F21
  dnf: name="@^gnome-desktop-environment"
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version|int < 21
  tags:
   - install
   - packages

- name: install GNOME Desktop for >= F21
  command: "{{yum}} -y groupinstall workstation-product-environment"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 21
  register: workstation_install_result
  changed_when: '"Nothing to do" in workstation_install_result.stderr'
  tags:
   - install
   - packages

- name: check whether CUDA-enabled Blender is installed
  command: rpm -q blender-cuda
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and ansible_distribution_major_version|int < 27
  register: blender_result
  failed_when: False
  changed_when: blender_result.rc != 0
  tags:
   - install
   - packages

- name: uninstall Blender to potentially replace with n17 if needed
  dnf: name=blender state=removed
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and ansible_distribution_major_version|int < 27 and blender_result.rc != 0
  tags:
   - install
   - packages

- name: reinstall Blender to get CUDA enabled version from n17
  dnf: name={{item}}
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and ansible_distribution_major_version|int < 27 and blender_result.rc != 0
  with_items:
   - blender
   - blender-cuda
  tags:
   - install
   - packages

- name: install NVIDIA binary driver from n17
  dnf: name={{item}}
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and ansible_distribution_major_version|int < 27
  with_items:
   - nvidia-driver
   - nvidia-driver-libs
   - nvidia-driver-libs.i686
   - nvidia-driver-cuda
   - nvidia-driver-cuda-libs
   - nvidia-driver-cuda-libs.i686
   - akmod-nvidia
   - nvidia-settings
  tags:
   - install
   - packages

- name: install NVIDIA binary driver from RPM Fusion
  dnf: name={{item}}
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 27
  with_items:
   - xorg-x11-drv-nvidia
   - xorg-x11-drv-nvidia-libs
   - xorg-x11-drv-nvidia-libs.i686
   - xorg-x11-drv-nvidia-cuda-libs
   - xorg-x11-drv-nvidia-cuda-libs.i686
   - akmod-nvidia
   - nvidia-settings
  tags:
   - install
   - packages

- name: clear out rpm locks
  command: rpm -q kernel-core
  changed_when: False
  tags:
   - install
   - atomic
   - akmods
   - packages
- name: get installed kernels
  command: rpm -q kernel-core --qf="%{version}-%{release}.%{arch}\n"
  changed_when: False
  register: kernel
  tags:
   - install
   - atomic
   - akmods
   - packages

#- name: install kernel modules
#  dnf: name=kernel-modules-{{item}}
#  with_items: kernel.stdout_lines
#  tags:
#   - akmods
#   - install
#   - packages

- name: run akmods
  command: akmods --kernels {{item}}
  with_items: "{{ kernel.stdout_lines }}"
  changed_when: False
  tags:
   - install
   - atomic
   - akmods
   - packages

- name: add nvidia to initramfs
  command: dracut -f -N --add-drivers "nvidia nvidia-drm nvidia-modeset i915 radeon" /boot/initramfs-{{item}}.img {{item}}
  with_items: "{{ kernel.stdout_lines }}"
  changed_when: False
  tags:
   - install
   - atomic
   - akmods
   - packages

- name: update all packages
  command: "{{yum}} -y update"
  register: workstation_install_result
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25
  changed_when: '"Nothing to do" in workstation_install_result.stderr'
  tags:
   - install
   - packages

- name: check that /etc/default/grub exists
  stat: path=/etc/default/grub
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25
  register: path
  tags:
   - install
   - atomic
   - packages

- name: remove nomodeset from kernel command line in /etc/default/grub
  replace:
   dest: "/etc/default/grub"
   regexp: "nomodeset gfxpayload=vga=normal"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and path.stat.exists
  tags:
   - install
   - atomic
   - packages

- name: check that /boot/grub2/grub.cfg exists
  stat: path=/boot/grub2/grub.cfg
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25
  register: path
  tags:
   - install
   - atomic
   - packages

- name: remove nomodeset from kernel command line in /boot/grub2/grub.cfg
  replace:
   dest: "/boot/grub2/grub.cfg"
   regexp: "nomodeset gfxpayload=vga=normal"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and path.stat.exists
  tags:
   - install
   - atomic
   - packages

- name: check that /boot/efi/EFI/fedora/grub.cfg exists
  stat: path=/boot/efi/EFI/fedora/grub.cfg
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25
  register: path
  tags:
   - install
   - atomic
   - packages

- name: remove nomodeset from kernel command line in /boot/efi/EFI/fedora/grub.cfg
  replace:
   dest: "/boot/efi/EFI/fedora/grub.cfg"
   regexp: "nomodeset gfxpayload=vga=normal"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25 and path.stat.exists
  tags:
   - install
   - atomic
   - packages

- name: install yum langpack support
  dnf: name="yum-langpacks"
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version|int < 22
  tags:
   - install
   - packages
   - languages

- name: install dnf langinstall support
  dnf: name="dnf-command(langinstall)"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22 and ansible_distribution_major_version|int < 25
  tags:
   - install
   - packages
   - languages

- name: install multiple language support
  command: "{{yum}} -y langinstall {{item}}"
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int < 25
  with_items:
   - "en_US"
   - "en_GB"
   - "ar_LB"
   - "fr_FR"
   - "hy"
  tags:
   - install
   - packages
   - languages

- name: install multiple language support
  dnf: name={{item}}
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 25
  with_items:
   - langpacks-en
   - langpacks-en_GB
   - langpacks-ar
   - langpacks-fr
   - hunspell-hy
  tags:
   - install
   - packages
   - languages

- name: install LibreOffice
  dnf: name="@libreoffice"
  tags:
   - install
   - packages
   - libreoffice

- name: prepare to install Fonts
  command: "{{yum}} -y group mark remove fonts"
  changed_when: False
  tags:
   - install
   - packages
   - fonts
  ignore_errors: yes

- name: install Fonts
  command: "{{yum}} -y --exclude=larabie-uncommon-fonts --setopt=\"group_package_types=optional,default,mandatory\" group install Fonts"
  tags:
   - install
   - packages
   - fonts

- name: cleanup after installing Fonts
  command: "{{yum}} -y group mark install fonts"
  changed_when: False
  tags:
   - install
   - packages
   - fonts

- name: copy BZFlag pseudo-src rpm to /tmp
  copy: src=bzflag.src.rpm dest=/tmp/ mode=0644
  tags:
   - install
   - bzflag

- name: install dependencies for BZFlag compilation for < F22
  command: yum-builddep -y /tmp/bzflag.src.rpm
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version|int < 22
  tags:
   - install
   - bzflag

- name: install dependencies for BZFlag compilation for >= F22
  command: dnf builddep -y /tmp/bzflag.src.rpm
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22
  tags:
   - install
   - bzflag

- name: install EFI bootloader utils
  dnf: name={{item}}
  with_items:
   - grub2-efi-x64
   - grub2
   - efibootmgr
   - efivar
   - gnu-efi
   - gnu-efi-utils
  tags:
   - install
   - bootloader
